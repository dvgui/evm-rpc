name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'yarn'

    - name: Cache node_modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.yarn/cache
          **/node_modules
        key: ${{ runner.os }}-yarn-22.x-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-22.x-
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Cache build output
      uses: actions/cache@v3
      with:
        path: dist
        key: ${{ runner.os }}-build-22.x-${{ hashFiles('src/**/*.ts') }}
        restore-keys: |
          ${{ runner.os }}-build-22.x-
          ${{ runner.os }}-build-

    - name: Build project with esbuild
      run: yarn build

    - name: Run unit tests
      run: yarn test --testPathPatterns="(client|utils)\.test\.ts$"

    - name: Run integration tests
      run: yarn test --testPathPatterns="integration\.test\.ts$"
      env:
        RPC_URL: https://ethereum-rpc.publicnode.com

    - name: Run example tests
      run: yarn test --testPathPatterns="examples\.test\.ts$"
      env:
        RPC_URL: https://ethereum-rpc.publicnode.com

    - name: Generate coverage report
      run: yarn test:coverage

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build-and-test-cli:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'yarn'

    - name: Cache node_modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.yarn/cache
          **/node_modules
        key: ${{ runner.os }}-yarn-22.x-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-22.x-
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Cache build output
      uses: actions/cache@v3
      with:
        path: dist
        key: ${{ runner.os }}-build-cli-${{ hashFiles('src/**/*.ts') }}
        restore-keys: |
          ${{ runner.os }}-build-cli-
          ${{ runner.os }}-build-

    - name: Build project with esbuild
      run: yarn build

    - name: Test CLI commands
      run: |
        # Test basic CLI functionality
        node dist/cli.js -u https://ethereum-rpc.publicnode.com info
        node dist/cli.js -u https://ethereum-rpc.publicnode.com block-number
        node dist/cli.js -u https://ethereum-rpc.publicnode.com balance 0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045
        node dist/cli.js -u https://ethereum-rpc.publicnode.com code 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48
        node dist/cli.js -u https://ethereum-rpc.publicnode.com call 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48 -d 0x18160ddd

    - name: Test CLI output formats
      run: |
        # Test JSON output
        node dist/cli.js -u https://ethereum-rpc.publicnode.com -f json info
        # Test pretty output (default)
        node dist/cli.js -u https://ethereum-rpc.publicnode.com -f pretty info

  security-audit:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 22.x
      uses: actions/setup-node@v4
      with:
        node-version: 22.x
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run security audit
      run: yarn audit --level moderate

    - name: Check for known vulnerabilities
      run: yarn audit --level high
